<%
  collections = [current_obj.outputs, current_obj.docker_image].flatten.compact.uniq
  collections_pdhs = collections.select {|x| !CollectionsHelper.match(x).nil?}.uniq.compact
  collections_uuids = collections - collections_pdhs
  preload_collections_for_objects collections_uuids if collections_uuids.any?
  preload_for_pdhs collections_pdhs if collections_pdhs.any?

  preload_objects_for_dataclass(Repository, [current_obj.repository], :name) if current_obj.repository
%>

      <div class="container">
        <div class="row">
          <div class="col-md-5">
            <% if current_obj.uuid.nil? %>
              No <%= current_obj.title %> has been submitted yet.
            <% else %>
            <table>
              <% keys = [:uuid, :modified_by_user_uuid, :created_at, :started_at, :finished_at, :container_uuid] %>
              <% keys << :log_collection if @object.uuid != current_obj.uuid %>
              <% keys << :outputs %>
              <% keys.each do |k| %>
                <%
                  val = current_obj.send(k) if current_obj.respond_to?(k)
                  if k == :outputs
                    has_val = val.andand.any?
                  elsif k == :log_collection and current_obj.state_label == "Running"
                    has_val = true
                  else
                    has_val = val
                  end
                %>
                <% if has_val %>
                <tr>
                  <td style="padding-right: 1em">
                    <%= k.to_s %>:
                  </td>
                  <td>
                    <% if k == :uuid %>
                      <%= link_to_arvados_object_if_readable(val, val, link_text: val) %>
                    <% elsif k.to_s.end_with? 'uuid' %>
                      <%= link_to_arvados_object_if_readable(val, val, friendly_name: true) %>
                    <% elsif k.to_s.end_with? '_at' %>
                      <%= render_localized_date(val) %>
                    <% elsif k == :outputs and val.any? %>
                      <% if val.size == 1 %>
                        <%= link_to_arvados_object_if_readable(val[0], 'Output data not available', friendly_name: true) %>
                      <% else %>
                        <%= render partial: 'work_units/show_outputs', locals: {id: current_obj.uuid, outputs: val, align:""} %>
                      <% end %>
                    <% elsif k == :log_collection %>
                      <%= render partial: 'work_units/show_log_link', locals: {wu: current_obj} %>
                    <% else %>
                      <%= val %>
                    <% end %>
                  </td>
                </tr>
                <% end %>
              <% end %>
            </table>
            <% end %>
          </div>
          <div class="col-md-6">
            <table>
              <% # link to repo tree/file only if the repo is readable and the commit is a sha1
                 repo = (/^[0-9a-f]{40}$/ =~ current_obj.script_version and
                         current_obj.repository and
                         object_for_dataclass(Repository, current_obj.repository, :name))
                 repo = nil unless repo.andand.http_fetch_url
                 %>
              <% [:priority, :script, :repository, :script_version, :supplied_script_version, :nondeterministic,
                  :runtime_constraints, :requesting_container_uuid].each do |k| %>
                <% val = current_obj.send(k) if current_obj.respond_to?(k) %>
                <% if val %>
                <tr valign="top">
                  <td style="padding-right: 1em">
                    <%= k.to_s %>:
                  </td>
                  <td>
                    <% if repo and k == :repository %>
                      <%= link_to val, show_repository_tree_path(id: repo.uuid, commit: current_obj.script_version, path: '/') %>
                    <% elsif repo and k == :script %>
                      <%= link_to val, show_repository_blob_path(id: repo.uuid, commit: current_obj.script_version, path: 'crunch_scripts/'+current_obj.script) %>
                    <% elsif repo and k == :script_version %>
                      <%= link_to val, show_repository_commit_path(id: repo.uuid, commit: current_obj.script_version) %>
                    <% elsif k == :runtime_constraints and val.any? %>
                      <%= render partial: 'work_units/show_table_data', locals: {id: current_obj.uuid, name: k, data_map: val} %>
                    <% elsif k.to_s.end_with? 'uuid' %>
                      <%= link_to_arvados_object_if_readable(val, val, friendly_name: true) %>
                    <% else %>
                      <%= val %>
                    <% end %>
                  </td>
                </tr>
                <% end %>
              <% end %>

              <%
                mounts = current_obj.send(:mounts) if current_obj.respond_to?(:mounts)
                mount_wf = mounts.andand[:"/var/lib/cwl/workflow.json"]
                mount_wf = mount_wf[5..-1] if mount_wf.andand.is_a?(String) and mount_wf.start_with?('keep:')
                mount_wf_cls = resource_class_for_uuid(mount_wf) if mount_wf
              %>
              <tr>
                <% if mount_wf_cls == Collection %>
                  <td style="padding-right: 1em">
                    workflow.json:
                  </td>
                  <td>
                    <%= link_to_if_arvados_object mount_wf, friendly_name: true %>
                  </td>
                <% end %>
              </tr>

              <% if current_obj.runtime_constraints.andand[:docker_image] and current_obj.docker_image %>
                <tr>
                  <td style="padding-right: 1em">
                    docker_image:
                  </td>
                  <td>
                    <%= current_obj.runtime_constraints[:docker_image] %>
                  </td>
                </tr>
                <tr>
                  <td style="padding-right: 1em">
                    docker_image_locator:
                  </td>
                  <td>
                    <%= link_to_arvados_object_if_readable(current_obj.docker_image,
                      current_obj.docker_image, friendly_name: true) %>
                  </td>
                </tr>
              <% elsif current_obj.docker_image %>
                <tr>
                  <td style="padding-right: 1em">
                    docker_image_locator:
                  </td>
                  <td>
                    <%= link_to_arvados_object_if_readable(current_obj.docker_image,
                      current_obj.docker_image, friendly_name: true) %>
                  </td>
                </tr>
              <% end %>
            </table>
          </div>

          <div class="col-md-12">
            <table style="width:100%;">
              <col width="15%" />
              <col width="85%" />
              <% [:command].each do |k| %>
                <% val = current_obj.send(k) if current_obj.respond_to?(k) %>
                <% if val %>
                <tr>
                  <td valign="top">
                    <%= k.to_s %>:
                  </td>
                  <td>
                    <% if k == :command %>
                      <div style="max-height:200px; overflow-y:auto;">
                        <%=val%>
                      </div>
                    <% else %>
                      <%= val %>
                    <% end %>
                  </td>
                </tr>
                <% end %>
              <% end %>

              <%
                mounts = current_obj.send(:mounts) if current_obj.respond_to?(:mounts)
                input_obj = mounts.andand[:"/var/lib/cwl/cwl.input.json"].andand[:content]
                mnt_inputs = JSON.pretty_generate(input_obj) if input_obj
              %>
              <% if mnt_inputs %>
                <tr>
                  <td valign="top">
                    cwl.input.json:
                  </td>
                  <td>
                    <div style="max-height:200px; overflow:auto;">
                      <% mnt_inputs.each_line do |l| %>
                        <% text_part = l %>
                          <% match = l.match /(.*)(\"keep:.*?\")/ %>
                          <% if match and match.size == 3 %>
                            <% text_part = match[1] %>
                            <% loc_part = match[2][6..-2] %>
                          <% end %>
                          <span style="white-space: pre-wrap; margin: none;"><%= text_part %><%= if loc_part then link_to_arvados_object_if_readable(loc_part, loc_part, friendly_name: true) end %> <% if loc_part then %> <br/> <% end %></span>
                      <% end %>
                    </div>
                  </td>
                </tr>
              <% end %>
            </table>
          </div>

        </div>

        <% if current_obj.parameters and !current_obj.parameters.empty? %>
        <div class="row">
          <div class="col-md-6">
            <p>script_parameters:</p>
            <pre><%= JSON.pretty_generate(current_obj.parameters) rescue nil %></pre>
          </div>
        </div>
        <% end %>
      </div>
