import "run-test.cwlex" as run_test
import "superuser-tok.cwl" as superuser_tok

def workflow main(
  arvados_api_hosts string[],
  arvados_cluster_ids string[],
  superuser_tokens string[],
  arvbox_containers string[],
  fed_migrate="arv-federation-migrate",
  arvbox_bin File,
  refspec="master"
) {

  logincluster = run expr (arvados_cluster_ids) string (inputs.arvados_cluster_ids[0])

  scatter arvbox_containers as container,
          arvados_cluster_ids as cluster_id,
	  arvados_api_hosts as host
    do run workflow(logincluster, arvbox_bin, refspec)
  {
    run tool(container, host, arvbox_bin, refspec) {
sh <<<
set -xe
export ARVBOX_CONTAINER="$(inputs.container)"
$(inputs.arvbox_bin.path) pipe <<EOF
cd /usr/src/arvados
git fetch
git checkout -f $(inputs.refspec)
git pull
chown arvbox:arvbox -R .
EOF

$(inputs.arvbox_bin.path) hotreset

while ! curl --fail --insecure --silent https://$(inputs.host)/discovery/v1/apis/arvados/v1/rest >/dev/null ; do sleep 3 ; done

ARVADOS_VIRTUAL_MACHINE_UUID=\$($(inputs.arvbox_bin.path) cat /var/lib/arvados-arvbox/vm-uuid)
ARVADOS_API_TOKEN=\$($(inputs.arvbox_bin.path) cat /var/lib/arvados-arvbox/superuser_token)
while ! curl --fail --insecure --silent -H "Authorization: Bearer $ARVADOS_API_TOKEN" https://$(inputs.host)/arvados/v1/virtual_machines/$ARVADOS_VIRTUAL_MACHINE_UUID >/dev/null ; do sleep 3 ; done

>>>
      return container as d
    }
    supertok = superuser_tok(container, d)
    return supertok
  }

  report = run_test(arvados_api_hosts, superuser_tokens=supertok, fed_migrate)
  return supertok, report
}
