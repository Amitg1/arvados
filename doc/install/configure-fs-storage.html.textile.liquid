---
layout: default
navsection: installguide
title: Configure filesystem storage
...
{% comment %}
Copyright (C) The Arvados Authors. All rights reserved.

SPDX-License-Identifier: CC-BY-SA-3.0
{% endcomment %}

Keepstore can store data in local and network-attached POSIX filesystems.

h2. Setting up filesystem mounts

Volumes are configured in the @Volumes@ section of the cluster configuration file.  You may provide multiple volumes for a single keepstore process to manage multiple disks.  Keepstore distributes blocks among volumes in round-robin fashion.

{% include 'assign_volume_uuid' %}

Note that each volume entry has an @AccessViaHosts@ section indicating which Keepstore instance(s) will serve that volume.  In this example, keep0 and keep1 each have their own data disk.  The @/mnt/local-disk@ directory on keep0 is volume @ClusterID-nyw5e-000000000000000@, and the @/mnt/local-disk@ directory on keep1 is volume @ClusterID-nyw5e-000000000000001@ .

<notextile>
<pre><code>    Volumes:
      <span class="userinput">ClusterID</span>-nyw5e-<span class="userinput">000000000000000</span>:
        AccessViaHosts:
          "http://<span class="userinput">keep0.ClusterID.example.com</span>:25107": {}
        Driver: <span class="userinput">Directory</span>
        DriverParameters:
          # The directory that will be used as the backing store.
          Root: <span class="userinput">/mnt/local-disk</span>

        # How much replication is performed by the underlying
        # filesystem.  (for example, a network filesystem may provide
        # its own replication).  This is used to inform replication
        # decisions at the Keep layer.
        Replication: 1

        # If true, do not accept write or trash operations, only
        # reads.
        ReadOnly: false

        # <a href="{{site.baseurl}}/admin/storage-classes.html">Storage classes</a> to associate with this volume.
        StorageClasses: null

      <span class="userinput">ClusterID</span>-nyw5e-<span class="userinput">000000000000001</span>:
        AccessViaHosts:
          "http://<span class="userinput">keep1.ClusterID.example.com</span>:25107": {}
        Driver: <span class="userinput">Directory</span>
        DriverParameters:
          Root: <span class="userinput">/mnt/local-disk</span>
</code></pre></notextile>

In the case of a network-attached filesystem, the @AccessViaHosts@ section can have multiple entries. If the filesystem is accessible by all keepstore servers, the AccessViaHosts section can be empty, or omitted entirely.  In this example, the underlying storage system performs replication, so specifying @Replication: 2@ means a block is considered to be stored twice for the purposes of data integrity, while only stored on a single volume from the perspective of Keep.

<notextile>
<pre><code>    Volumes:
      <span class="userinput">ClusterID</span>-nyw5e-<span class="userinput">000000000000002</span>:
        AccessViaHosts:
          # This section determines which keepstore servers access the
          # volume. In this example, keep0 has read/write access, and
          # keep1 has read-only access.
          #
          # If the AccessViaHosts section is empty or omitted, all
          # keepstore servers will have read/write access to the
          # volume.
          "http://<span class="userinput">keep0.ClusterID.example.com</span>:25107/": {}
          "http://<span class="userinput">keep1.ClusterID.example.com</span>:25107/": {ReadOnly: true}
        Driver: <span class="userinput">Directory</span>
        DriverParameters:
          Root: <span class="userinput">/mnt/network-attached-filesystem</span>
        Replication: 2
</code></pre></notextile>
